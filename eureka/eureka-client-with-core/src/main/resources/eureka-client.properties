eureka.region=default

# Name of the application to be identified by other services (in this case, it is the eureka service itself)
eureka.name=eureka-jeonggi
eureka.instanceId="eureka-jeonggi"
eureka.vipAddress=localhost
eureka.hostName=localhost
eureka.instance.hostName=localhost
# Virtual host name by which the clients identifies this service (in this case, it is the eureka service itself)
# The port where the service will be identified and will be serving requests
eureka.port=8080
# Set to false as this config is for the eureka client in the eureka server itself.
# The eureka clients running in eureka server needs to connect to servers in other zones.
#
# For other applications this should not be set (default to true) for better zone based load balancing.
eureka.preferSameZone=false

## ------------------------------------------------------------------------------
## The below properties govern how clients should connect to eureka servers.
## In general these can be the same for all clients in the same eureka ecosystem.
## ------------------------------------------------------------------------------

# Change this if you want to use a DNS based lookup for determining other eureka servers (see example below)
eureka.shouldUseDns=false
eureka.serviceUrl.default=http://localhost:8761/eureka/

# for the eureka server's own client config, set on-demand update to false as it may be too quick for the REST
# resource initialization
eureka.shouldOnDemandUpdateStatusChange=false

# = false to get instances for all statuses, not just UP. This is necessary to properly calculate the correct
# self preservation threshold. See issue https://github.com/Netflix/eureka/issues/1127 for a discussion.
eureka.shouldFilterOnlyUpInstances=false