server:
  port: 8002
spring:
  cloud:
    gateway:
      httpclient:
        connect-timeout: 2000
      routes:
        - id: test
          uri: http://localhost8444
          predicates:
            - Path=/api/**
          filters:
            - CircuitBreaker=defaultCircuitBreaker
resilience4j:
  circuitbreaker:
    configs:
      default:
        register-health-indicator: true
경        sliding-window-type: time_based
        sliding-window-size: 10 # 배열 사이즈가 10이여서 최소 10번의 요청은 들어와야함 > 30초 동안의 요청을 체크
        failure-rate-threshold: 50
        slow-call-rate-threshold: 50 # slow api 비율
        slow-call-duration-threshold: 5s # slow circuit-breaker는 나눠서 적용하면 될 듯 싶다. 필요한 곳에만 적용하는 방법으로
        minimum-number-of-calls: 50 # 최소 요청수
#        permitted-number-of-calls-in-half-open-state: 500
        wait-duration-in-open-state: 10s
        ignore-exceptions:
          - com.wyjax.scgcircuitbreaker.exception.AuthenticationException
          - java.io.IOException
          - org.springframework.web.client.HttpServerErrorException
          - java.lang.IllegalStateException
          - java.lang.IllegalArgumentException
  bulkhead:
    configs:
      default:
        max-concurrent-calls: 100
  thread-pool-bulkhead:
    configs:
      default:
        max-thread-pool-size: 4
        core-thread-pool-size: 2
        queue-capacity: 2
management:
  health:
    circuitbreakers:
      enabled: true
  endpoint:
    health:
      showDetails: always
    web:
      exposure:
        include: "*"
      expose: "*"
    metrics:
      enabled: true
  metrics:
    enable:
      resilience4j:
        circuitbreaker:
          calls: true